<server description="OpenLiberty MicroProfile TravelService server">
    <featureManager>
        <feature>jpa-2.2</feature>
        <feature>jndi-1.0</feature>
        <!--        &lt;!&ndash;        <feature>microProfile-4.0</feature>&ndash;&gt;-->
        <!--        &lt;!&ndash;TODO check if this helps with the Docker problem &ndash;&gt;-->
        <!--        <feature>cdi-2.0</feature>-->
        <!--        <feature>jaxrs-2.1</feature>-->
        <!--        <feature>jaxrsClient-2.1</feature>-->
        <!--        <feature>jsonb-1.0</feature>-->
        <!--        <feature>jsonp-1.1</feature>-->
        <!--        <feature>mpConfig-2.0</feature>-->
        <!--        <feature>mpFaultTolerance-3.0</feature>-->
        <!--        <feature>mpHealth-3.0</feature>-->
        <!--        <feature>mpJwt-1.2</feature>-->
        <!--        <feature>mpOpenAPI-2.0</feature>-->
        <!--        <feature>mpOpenTracing-2.0</feature>-->
        <!--        <feature>mpRestClient-2.0</feature>-->
        <!--        <feature>servlet-4.0</feature>-->

        <feature>microProfile-4.0</feature>
        <feature>eventLogging-1.0</feature>
        <feature>mpContextPropagation-1.2</feature>
        <!--                <feature>mpLRACoordinator-1.0</feature>--> <!--TODO-->
        <feature>mpLRA-1.0</feature>
    </featureManager>

    <!-- Configure default values -->
    <variable name="default.http.port" defaultValue="8090"/>
    <variable name="default.https.port" defaultValue="9443"/>
    <variable name="lra.coordinator.port" defaultValue="8080"/>
    <variable name="lra.coordinator.host" defaultValue="localhost"/>
    <variable name="lra.coordinator.path" defaultValue="lrac/lra-coordinator"/>

    <!-- Configure Logging -->
    <logging consoleLogLevel="${openLiberty.microprofile.logging.level}"
             consoleFormat="${openLiberty.microprofile.logging.format}"
             consoleSource="${openLiberty.microprofile.logging.console.source}"/>
    <logging traceSpecification="eclipselink.sql=all"/>

    <mpMetrics authentication="false"/> <!--TODO: keep?-->

    <httpEndpoint httpPort="${default.http.port}" httpsPort="${default.https.port}"
                  id="defaultHttpEndpoint" host="*"/>

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <webApplication id="TravelService"
                    location="TravelService-1.0-SNAPSHOT.war" contextRoot="/">
    </webApplication>

    <!-- Connect to LRA Coordinator -->
    <lra port="${lra.coordinator.port}" host="${lra.coordinator.host}" path="${lra.coordinator.path}"/>

    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true"/>

    <!-- Enable Concurrency -->
    <managedThreadFactory jndiName="concurrent/threadFactory2">
        <contextService>
            <classloaderContext/>
            <jeeMetadataContext/>
        </contextService>
    </managedThreadFactory>

    <!-- Datasource Connector Location -->
    <library id="mySQLLib">
        <fileset dir="jdbc"
                 includes="mysql-connector-java-*.jar"/>
    </library>

    <!-- Datasource Configuration -->
    <dataSource id="microProfileTravelService"
                jndiName="jdbc/TravelService">
        <jdbcDriver libraryRef="mySQLLib"/>
        <properties user="${openLiberty.mysql.username}"
                    password="${openLiberty.mysql.password}"
                    URL="${openLiberty.mysql.url}"/>
    </dataSource>

</server>